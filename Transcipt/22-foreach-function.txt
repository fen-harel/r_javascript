[00:00:00]
>> Bianca Gandolfo: Now I've add each so each, I'm using underscore each here for this example because we're going to implement underscore style each later, and we're going to get to that next, here. Let me just show you an example of what happened and talk a little bit about each.

[00:00:18]
So each takes two arguments. First thing is a list, and the second thing is the callback function. Also we call this the iterator function. And we call it the iterator function because iterator is related to things that can be looped through. And so arrays, we loop through arrays, we call, this would be the interatee, the thing that is being iterated, and this is the iterator.

[00:00:49]
But anyway, I think it's simpler to think of, this is the list, this is the callback function, it's gonna be called on each item on this list, yeah? And so, suspects, the very first loop that it calls is gonna be Ms. Scarlett, and it's gonna be passed into this function.

[00:01:11]
So name would then be Ms. Scarlet, right? And then it's gonna keep doing this, same thing as before, I kind of changed the naming there, but same idea. And the second, it will do the same thing with Colonel Mustard. Name will be Colonel Mustard. And we do some stuff there.

[00:01:28]
And it will do that all the way through until it reaches the end of our array, cool? Any questions about how this works?
>> Bianca Gandolfo: No, okay. And there it is again when we consolidate it onto one line.
>> Bianca Gandolfo: Questions? Comments? Opinions about this version of _.each? Have you guys used the _.each before?

[00:02:02]
Now have you guys used Native forEach?
>> Bianca Gandolfo: No, okay. So we have a mixed bag awesome. So this is our very first kinda of functional utility, I say kinda of because people who are really into functional programing would say that it's not. Especially underscore's version of it but who's counting?

[00:02:26]
But more or less it's the same idea, right? We're kind of abstracting a loop into a function. Right, so instead of doing our four loop which we've been talking about for like, I don't know, an hour now. We're using each, and each is a function. And the reason we want to do that is because it prevents errors really.

[00:02:52]
And it's more readable, right? Because it's really clear. We can say forEach of this data structure, do a thing, right? It's much more readable than, for example, all of these var i equals etc. If you say that that's less than and equal to here, that can give you an off by one error.

[00:03:15]
There's a lot of things that can go wrong, so each is really awesome. We have forEach that comes for free. The reason that we're implementing _.each is because if you notice, forEach, the way it works is you have an array, and then you say .foreach and you pass it a function.

[00:03:38]

>> Bianca Gandolfo: It's a lot harder to write than just passing that as two arguments. Cuz once we have to put this dot for each situation, means that it's a method on the array. And for it to be a method on array, we have to get into prototypes and object oriented stuff, which I all ready said this is beyond the scope of this course.

[00:04:01]
That's why we're not doing this version, we're passing the arguments. You're welcome to do it if you're familiar with how methods work, and inheritance works and stuff like that, it could be fun to implement your own array method like this. But we won't be doing that. But we could talk about it after, I'm happy to chit chat.

[00:04:28]
Okay, cool, so let's see, where did we leave off last?
>> Bianca Gandolfo: You guys don't remember who talked last? Was it you? Was it you? It was you guys, okay. This section over here. What does each do? What is each useful for?
>> Speaker 2: Looping through lists?
>> Bianca Gandolfo: Yeah, absolutely.

[00:05:04]
And over here, whats the difference between forEach and _.each?
>> Speaker 2: Readability.
>> Bianca Gandolfo: It does read different. It does read different. People would say, though, that well
>> Bianca Gandolfo: I'm gonna take that back. I think its controversial which one is more readable, I'll say that.
>> Bianca Gandolfo: Yes, but they do read differently.

[00:05:37]

>> Speaker 2: You said forEach is called on the array itself as opposed to taking the array as an argument
>> Bianca Gandolfo: Yeah exactly, exactly, so what is this thing?
>> Bianca Gandolfo: Here, these lovely friends, this is like the gray area, you guys are all wearing gray sweaters, gray sweater club.
>> Speaker 4: [LAUGH]

[00:06:02]

>> Speaker 4: The underscore.
>> Bianca Gandolfo: What is the underscore?
>> Speaker 4: Is that one of the libraries you asked in the beginning?
>> Bianca Gandolfo: Yeah, it's the library Have any of you all used the underscore library? You have?
>> Speaker 4: I've used Lodash.
>> Bianca Gandolfo: Yeah, you used Lodash? Okay, yeah. Similar thing, same.

[00:06:20]
Almost exactly the same actually if you ask me, really. So if I said type of underscore.
>> Speaker 4: Objects?
>> Bianca Gandolfo: Is an object. How do we know it's an object?
>> Speaker 4: Cuz there's a dot.
>> Bianca Gandolfo: It has a dot, yes. Yes, he remembers. Makes me so happy.
>> Bianca Gandolfo: Yeah, so somewhere and underscore's documentation it just says, var underscore equals an object and it has each, in it or something.

[00:07:01]
Just a function that takes stuff. So that's an underscore that's kinda confusing for people sometimes.
>> Bianca Gandolfo: The point I like to make in this workshop is that, it's all the same repeated, but like oddly a little bit different here and there, and we take things for granted and think it's a special thing.

[00:07:25]
Like J query. People think the $ sign is a special J query thing, but really J query is just var $ sign equals some function that takes a selector or something.
>> Bianca Gandolfo: And it returns an object that has J query magic. Something like that.
>> Bianca Gandolfo: So it's not anything that you don't already know.

[00:07:56]
Okay, great, each.
>> Bianca Gandolfo: I think we exhausted that. So let's use each. What is this gonna log? We made it to the back of the room again. You're in a group of one, so you get to answer every single time, unless Marc.
>> Speaker 5: No, I'm good. What was the question?

[00:08:29]

>> Bianca Gandolfo: What's it going to log?
>> Speaker 5: What's it going to log?
>> Bianca Gandolfo: Mm-hm.
>> Speaker 5: It will log in order, observatory, ballroom, and library.
>> Bianca Gandolfo: Yeah.
>> Bianca Gandolfo: Exactly.

