[00:00:00]
>> Bianca Gandolfo: So, yeah, so we're gonna implement this. In this case, we're gonna pass the array.
>> Bianca Gandolfo: Just so you know.
>> Bianca Gandolfo: And we're gonna implement the internals of from.
>> Bianca Gandolfo: And then we'll do that, we'll eat lunch, and we'll come back in an hour,
>> Bianca Gandolfo: Or so. You have a question?

[00:00:25]

>> off screen: Yeah, so the array-like object that it's receiving, could you just say more about what that is supposed to be, at least for this exercise? Should it
>> Bianca Gandolfo: They should return an array. It should take an array-like object and return an array. An array-like object is just an object that has numerical indices, but it doesn't have array methods on it.

[00:00:51]

>> off screen: Okay. Okay, I think I see what you mean then.
>> Bianca Gandolfo: Yeah, it actually even has a length, so be careful.
>> Bianca Gandolfo: But it won't have a push.
>> off screen: Okay.
>> Bianca Gandolfo: That's what it would look like visually. That's a good question.
>> off screen: Okay, got it, thank you.
>> Bianca Gandolfo: Mm-hm.

[00:01:16]

>> Bianca Gandolfo: And if you do, well, let's try something here, I'm curious.
>> Bianca Gandolfo: All right, I'll show you a cool trick. You ready? So did you know that you could just put a debugger here?
>> Bianca Gandolfo: Did you guys know that? And then you run it, and it just opens your random code snippet in the debugger?

[00:01:44]

>> Bianca Gandolfo: So, I put a debugger here, because I wanna stop the function right there, so I can have access to arguments. And why did I wanna do that again? Now I'm totally blanking what I was about to do. What were we just talking about? So here's what the arguments,

[00:02:01]

>> Bianca Gandolfo: Looks like, and if we say Array.isArray,
>> Bianca Gandolfo: (arguments), should return false. Can you guys see that? It's a little small.
>> Bianca Gandolfo: So all I did was, I took a code snippet, I put a debugger in there, it pauses it here. And the reason I wanna pause it there is cuz it's after it's been invoked, and the argument's,

[00:02:27]

>> Bianca Gandolfo: Variable has a value at that point. So, if you wanna experiment with your code, you can do that.
>> Bianca Gandolfo: And, for those of you who aren't familiar with how this works, you can step over your code as well, and you can also step into methods. So, if you define a method, you can step into it, and it will jump into that file or to that method definition, and then you can keep walking through.

[00:02:54]
And you can follow how your code runs in your,
>> Bianca Gandolfo: Project. So, that's kind of nice, and if you go too far in, you can step out as well. But most of the time, I'm just stepping over things. And then it will tell me, for example, that array looks like that, and I can hover, which is pretty nice.

[00:03:21]
Also, if I go too far, I can look at the call stack, and I can do something called restart stack frame. And it will go back to the beginning, and then I can do it again, and just be like, wait, what happened? Okay, that's what happened. And then I forgot again, and I restart it, or whatever.

[00:03:39]

>> Bianca Gandolfo: That's another cool thing. You can watch variables if you want, it's not as useful as it used to be now that we can hover, and it has these little orange things now.
>> Bianca Gandolfo: You can see different scopes, which will be useful, after lunch, we're gonna talk about scope.

[00:03:58]
So, in our global scope, it looks like we have a lot of different,
>> Bianca Gandolfo: Libraries here with a bunch of craziness.
>> Bianca Gandolfo: And then locally, we have our arguments array in the window.
>> Bianca Gandolfo: I'm not sure, I guess the script scope is just the scope of this little snippet that I passed in.

